package assignment1.generics;

import static org.junit.Assert.*;

import org.junit.Test;

import utility.StudentSample;

public class StatisticalModeGenericsTest {

	@Test
	public void integerTest() {
		Integer[] intArray = {3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2};
		Integer modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(Integer.class));
	}
	
	@Test
	public void doubleTest() {
		Double[] doubleArray = {3.5,6.2,4.2,2.1,1.5,3.8,5.9,6.5,7.3,8.4,9.1,7.0,4.0,8.6,4.4,7.3,3.4,2.3,5.2,6.8,7.6,3.7,8.4,9.5,9.6,7.7,7.3,5.2,5.1,4.0,4.9,3.5,3.6,3.4,2.3,2.3};
		Double modeResult = StatisticalModeGenerics.getMode(doubleArray);
		assertTrue(modeResult.getClass().equals(Double.class));
	}
	
	@Test
	public void objectTest() {
		StudentSample student1 = new StudentSample("Keyur Golani", "010808525", "CMPE");
		StudentSample student2 = new StudentSample("Kalgi Bhatt", "01083758", "CMPE");
		StudentSample student3 = new StudentSample("Ved Vasavada", "010838933", "CMPE");
		StudentSample student4 = new StudentSample("Hardik Shah", "010832849", "CMPE");
		StudentSample[] intArray = {student1, student2, student1, student3, student4, student1,student2, student4, student2};
		StudentSample modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(StudentSample.class));
	}
	
	@Test
	public void stringTest() {
		String[] intArray = {"My", "Name", "Is", "Keyur", "My", "ID", "No", "Is", "010808525"};
		String modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(String.class));
	}
	
	@Test
	public void largeArrayTest() {
		Integer[] intArray = {3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,6,4,2,1,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,3,5,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,8,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,6,7,8,9,7,4,8,4,7,3,2,5,6,7,3,8,9,9,7,7,5,5,4,4,3,3,3,2,2,8,9,7,4,8,4,7,3,2,5,9,7,4,8,5,9,7,4,8,4,7,3,2,5,6,7,3,8,9,3,6,7,3,8,9,9,7,7,5,5,4,4};
		Integer modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(Integer.class));
	}
	
	@Test
	public void oneValueTest() {
		Integer[] intArray = {3};
		Integer modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(Integer.class) && modeResult == 3);
	}
	
	@Test
	public void noModeTest() {
		Integer[] intArray = {1,2,3,4,5,6,7,8,9,0};
		Integer modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(Integer.class));
	}
	
	@Test
	public void onlyModeTest() {
		Integer[] intArray = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
		Integer modeResult = StatisticalModeGenerics.getMode(intArray);
		assertTrue(modeResult.getClass().equals(Integer.class) && modeResult == 1);
	}

}
